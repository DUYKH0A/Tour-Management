{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final\\\\frontend\\\\src\\\\pages\\\\TourDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../styles/tour-detail.css\";\nimport { Container, Row, Col, Form, ListGroup } from \"reactstrap\";\nimport { useParams } from \"react-router-dom\";\nimport caculateAvgRating from \"./../utils/avgRating\";\nimport avata from \"../assets/images/avatar.jpg\";\nimport Booking from \"../components/Booking/Booking\";\nimport Newsletter from \"./../shared/Newsletter\";\nimport useFetch from '../hooks/useFetch';\nimport { BASE_URL } from \"../utils/config\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TourDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const reviewMsgRef = useRef(\"\");\n  const [tourRating, setTourRating] = useState(null);\n  //data from database\n\n  const {\n    data: tour\n  } = useFetch(`${BASE_URL}/tours/${id}`);\n  //\n  const {\n    photo,\n    title,\n    desc,\n    price,\n    address,\n    reviews,\n    city,\n    distance,\n    maxGroupSize\n  } = tour;\n  const {\n    totalRating,\n    avgRating\n  } = caculateAvgRating(reviews);\n\n  //format date\n  const option = {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\"\n  };\n\n  //submit request to server\n  const submitHandler = e => {\n    e.preventDefault();\n    const reviewText = reviewMsgRef.current.value;\n    alert(`${reviewText}, ${tourRating}`);\n    console.log(reviewText);\n    console.log(tourRating);\n    //later call\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: !loading && !err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TourDetails, \"SNcvZ4CftcsEBxNquJAwsxh/BSE=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = TourDetails;\nexport default TourDetails;\nvar _c;\n$RefreshReg$(_c, \"TourDetails\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Container","Row","Col","Form","ListGroup","useParams","caculateAvgRating","avata","Booking","Newsletter","useFetch","BASE_URL","TourDetails","id","reviewMsgRef","tourRating","setTourRating","data","tour","photo","title","desc","price","address","reviews","city","distance","maxGroupSize","totalRating","avgRating","option","day","month","year","submitHandler","e","preventDefault","reviewText","current","value","alert","console","log","window","scrollTo","loading","err"],"sources":["E:/Final/frontend/src/pages/TourDetails.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"../styles/tour-detail.css\";\nimport { Container, Row, Col, Form, ListGroup } from \"reactstrap\";\nimport { useParams } from \"react-router-dom\";\nimport caculateAvgRating from \"./../utils/avgRating\";\nimport avata from \"../assets/images/avatar.jpg\";\nimport Booking from \"../components/Booking/Booking\";\nimport Newsletter from \"./../shared/Newsletter\";\nimport useFetch from '../hooks/useFetch';\nimport { BASE_URL } from \"../utils/config\";\n\n\n\nconst TourDetails = () => {\n  const { id } = useParams();\n  const reviewMsgRef = useRef(\"\");\n  const [tourRating, setTourRating] = useState(null);\n  //data from database\n\n  const {data:tour} = useFetch(`${BASE_URL}/tours/${id}`);\n  //\n  const {\n    photo,\n    title,\n    desc,\n    price,\n    address,\n    reviews,\n    city,\n    distance,\n    maxGroupSize,\n  } = tour;\n\n  const { totalRating, avgRating } = caculateAvgRating(reviews);\n\n  //format date\n  const option = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n\n  //submit request to server\n  const submitHandler = e => {\n    e.preventDefault();\n    const reviewText = reviewMsgRef.current.value;\n    alert(`${reviewText}, ${tourRating}`)\n    console.log(reviewText)\n    console.log(tourRating)\n    //later call\n  };\n\n  useEffect(()=>{\n    window.scrollTo(0,0)\n  },[])\n\n  return (\n    <>\n      <section>\n        <Container>\n          {\n            !loading && !err\n          }\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default TourDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,2BAA2B;AAClC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,QAAQ,YAAY;AACjE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAAC;AAAA;AAI3C,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,EAAE;EAC1B,MAAMS,YAAY,GAAGhB,MAAM,CAAC,EAAE,CAAC;EAC/B,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAClD;;EAEA,MAAM;IAACkB,IAAI,EAACC;EAAI,CAAC,GAAGR,QAAQ,CAAE,GAAEC,QAAS,UAASE,EAAG,EAAC,CAAC;EACvD;EACA,MAAM;IACJM,KAAK;IACLC,KAAK;IACLC,IAAI;IACJC,KAAK;IACLC,OAAO;IACPC,OAAO;IACPC,IAAI;IACJC,QAAQ;IACRC;EACF,CAAC,GAAGT,IAAI;EAER,MAAM;IAAEU,WAAW;IAAEC;EAAU,CAAC,GAAGvB,iBAAiB,CAACkB,OAAO,CAAC;;EAE7D;EACA,MAAMM,MAAM,GAAG;IAAEC,GAAG,EAAE,SAAS;IAAEC,KAAK,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAU,CAAC;;EAEjE;EACA,MAAMC,aAAa,GAAGC,CAAC,IAAI;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,UAAU,GAAGvB,YAAY,CAACwB,OAAO,CAACC,KAAK;IAC7CC,KAAK,CAAE,GAAEH,UAAW,KAAItB,UAAW,EAAC,CAAC;IACrC0B,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;IACvBI,OAAO,CAACC,GAAG,CAAC3B,UAAU,CAAC;IACvB;EACF,CAAC;;EAEDlB,SAAS,CAAC,MAAI;IACZ8C,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC;EACtB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACE;IAAA,uBACE;MAAA,uBACE,QAAC,SAAS;QAAA,UAEN,CAACC,OAAO,IAAI,CAACC;MAAG;QAAA;QAAA;QAAA;MAAA;IAER;MAAA;MAAA;MAAA;IAAA;EACJ,iBACT;AAEP,CAAC;AAAC,GAlDIlC,WAAW;EAAA,QACAP,SAAS,EAKJK,QAAQ;AAAA;AAAA,KANxBE,WAAW;AAoDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}